{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\sohel\\\\Desktop\\\\reactJsTute\\\\react_clock\\\\src\\\\Alarm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\nimport { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport './Alarm.css';\n\nconst Alarm = () => {\n  _s();\n\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const [alarmList, setAlarm] = useState([]);\n  const [alarmCount, setAlarmCount] = useState(0);\n  window.addEventListener('load', event => {\n    if (localStorage.getItem(\"AlarmList\") !== null) {\n      var LocalAlarmList = JSON.parse(localStorage.getItem(\"AlarmList\"));\n\n      if (LocalAlarmList.length != null) {\n        const today = new Date();\n\n        for (let i = 0; i < LocalAlarmList.length; i++) {\n          if (today.getFullYear() > LocalAlarmList[i].Date.Year) {\n            LocalAlarmList.splice(i, 1);\n          } else if (today.getMonth() > LocalAlarmList[i].Date.Month) {\n            LocalAlarmList.splice(i, 1);\n          } else if (today.getDate() > LocalAlarmList[i].Date.Day) {\n            LocalAlarmList.splice(i, 1);\n          } else if (today.getHours > LocalAlarmList[i].Time.Hour) {\n            LocalAlarmList.splice(i, 1);\n          } else if (today.getMinutes > LocalAlarmList[i].Time.Minute) {\n            LocalAlarmList.splice(i, 1);\n          } else {\n            break;\n          }\n        }\n\n        localStorage.setItem(\"AlarmList\", JSON.stringify(LocalAlarmList));\n        setAlarm(LocalAlarmList);\n        setAlarmCount(LocalAlarmList.length);\n      }\n    }\n\n    ;\n  });\n\n  const GetDayRemaining = (alarmMinute, alarmHour) => {\n    const today = new Date();\n    const minute = today.getMinutes();\n    const hour = today.getHours();\n    var Remaining = {\n      TimeRemaining: \"\",\n      Day: \"\"\n    };\n\n    if (alarmHour > hour) {\n      Remaining.TimeRemaining = alarmHour * 60 + alarmMinute - (hour * 60 + minute);\n      Remaining.Day = \"Today\";\n      return Remaining;\n    } else if (alarmHour < hour) {\n      Remaining.TimeRemaining = (alarmHour + 24) * 60 + alarmMinute - (hour * 60 + minute);\n      Remaining.Day = \"Tommorow\";\n      return Remaining;\n    } else {\n      if (alarmMinute > minute) {\n        Remaining.TimeRemaining = alarmMinute - minute;\n        Remaining.Day = \"Today\";\n        return Remaining;\n      } else {\n        Remaining.TimeRemaining = 24 * 60 - (minute - alarmMinute);\n        Remaining.Day = \"Tommorow\";\n        return Remaining;\n      }\n    }\n  };\n\n  const setAlarmDate = (alarmMinute, alarmHour) => {\n    var DayAndRemaining = GetDayRemaining(alarmMinute, alarmHour);\n    var DayDate = {\n      Day: DayAndRemaining.Day,\n      Remaining: DayAndRemaining.TimeRemaining,\n      Date: \"\"\n    };\n\n    if (DayDate.Day === \"Today\") {\n      DayDate.Date = {\n        Day: selectedDate.getDate(),\n        Month: selectedDate.getMonth() + 1,\n        Year: selectedDate.getFullYear()\n      };\n    } else {\n      var Day = selectedDate.getDate() + 1;\n      var Month = selectedDate.getMonth() + 1;\n      var Year = selectedDate.getFullYear();\n      DayDate.Date = {\n        Day: Day % 30,\n        Month: (Month + Math.trunc(Day / 30)) % 13,\n        Year: Year + Math.trunc((Month + Math.trunc(Day / 30)) / 13)\n      };\n    }\n\n    return DayDate;\n  };\n\n  const AlarmListUpdate = () => {\n    var list = JSON.parse(localStorage.getItem(\"AlarmList\"));\n\n    if (list != null) {\n      for (let i = 0; i < list.length; i++) {\n        list[i].Remaining = GetDayRemaining(list[i].Time.Minute, list[i].Time.Hour).TimeRemaining;\n      }\n\n      setAlarm(list);\n    }\n  };\n\n  const AlarmListInsert = () => {\n    var DayDate = setAlarmDate(selectedDate.getMinutes(), selectedDate.getHours());\n    var alarm = {\n      Time: {\n        Hour: selectedDate.getHours(),\n        Minute: selectedDate.getMinutes()\n      },\n      Date: DayDate.Date,\n      Day: DayDate.Day,\n      Reminder: document.getElementById(\"reminder\").value,\n      Remaining: DayDate.Remaining\n    };\n    AlarmListUpdate();\n\n    if (alarmList.length === 0) {\n      alarmList.unshift(alarm);\n    } else if (alarmList.length === 1) {\n      if (alarmList[0].Remaining > alarm.Remaining) {\n        alarmList.unshift(alarm);\n      } else {\n        alarmList.push(alarm);\n      }\n    } else {\n      for (let i = 0; i < alarmList.length - 1; i++) {\n        if (alarmList[i].Remaining > alarm.Remaining) {\n          alarmList.unshift(alarm);\n        } else if (alarmList[i].Remaining < alarm.Remaining && alarmList[i + 1].Remaining > alarm.Remaining) {\n          alarmList.splice(i + 1, 0, alarm);\n        } else {\n          alarmList.push(alarm);\n        }\n\n        console.log(i);\n      }\n    }\n\n    setAlarm(alarmList);\n  };\n\n  const click = () => {\n    AlarmListInsert();\n    localStorage.setItem(\"AlarmList\", JSON.stringify(alarmList));\n    setAlarmCount(alarmCount + 1);\n  };\n\n  const showLocalStorage = () => {\n    var list = JSON.parse(localStorage.getItem(\"AlarmList\"));\n    console.log(list);\n  };\n\n  const showLocalStorageClear = () => {\n    localStorage.removeItem(\"AlarmList\");\n  };\n\n  const ArarmListShow = () => {\n    if (alarmCount === 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Occation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Occation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 58\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: alarmList.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", `${item.Time.Hour} : ${item.Time.Minute}`, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", item.Day, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", item.Reminder, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Set Alarm \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timePicker\",\n            children: /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n              utils: DateFnsUtils,\n              children: /*#__PURE__*/_jsxDEV(TimePicker, {\n                value: selectedDate,\n                onChange: handleDateChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reminderText\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"textBox\",\n              id: \"reminder\",\n              placeholder: \"Reminder Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setButton\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: click,\n              children: \" Set \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"table\",\n        children: /*#__PURE__*/_jsxDEV(ArarmListShow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showLocalStorage,\n          children: \"LOCAL STORAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: showLocalStorageClear,\n          children: \"LOCAL STORAGE CLEAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Alarm, \"HxLWcCehGF+Jc8qvYCgJqeLf6pc=\");\n\n_c = Alarm;\nexport default Alarm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"sources":["C:/Users/sohel/Desktop/reactJsTute/react_clock/src/Alarm.jsx"],"names":["useState","DateFnsUtils","TimePicker","MuiPickersUtilsProvider","Alarm","selectedDate","handleDateChange","Date","alarmList","setAlarm","alarmCount","setAlarmCount","window","addEventListener","event","localStorage","getItem","LocalAlarmList","JSON","parse","length","today","i","getFullYear","Year","splice","getMonth","Month","getDate","Day","getHours","Time","Hour","getMinutes","Minute","setItem","stringify","GetDayRemaining","alarmMinute","alarmHour","minute","hour","Remaining","TimeRemaining","setAlarmDate","DayAndRemaining","DayDate","Math","trunc","AlarmListUpdate","list","AlarmListInsert","alarm","Reminder","document","getElementById","value","unshift","push","console","log","click","showLocalStorage","showLocalStorageClear","removeItem","ArarmListShow","map","item"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\r\nimport {\r\n    TimePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nimport './Alarm.css';\r\n\r\nconst Alarm = () => {\r\n    const [selectedDate, handleDateChange] = useState(new Date());\r\n    const [alarmList, setAlarm] = useState([]);\r\n    const [alarmCount, setAlarmCount] = useState(0);\r\n\r\n    window.addEventListener('load', (event) => {\r\n        if (localStorage.getItem(\"AlarmList\") !== null) {\r\n            var LocalAlarmList = JSON.parse(localStorage.getItem(\"AlarmList\"));\r\n            if (LocalAlarmList.length != null) {\r\n                const today = new Date();\r\n\r\n                for (let i = 0; i < LocalAlarmList.length; i++) {\r\n                    if (today.getFullYear() > LocalAlarmList[i].Date.Year) {\r\n                        LocalAlarmList.splice(i, 1);\r\n                    }\r\n                    else if (today.getMonth() > LocalAlarmList[i].Date.Month) {\r\n                        LocalAlarmList.splice(i, 1);\r\n                    }\r\n                    else if (today.getDate() > LocalAlarmList[i].Date.Day) {\r\n                        LocalAlarmList.splice(i, 1);\r\n                    }\r\n                    else if (today.getHours > LocalAlarmList[i].Time.Hour) {\r\n                        LocalAlarmList.splice(i, 1);\r\n                    }\r\n                    else if (today.getMinutes > LocalAlarmList[i].Time.Minute) {\r\n                        LocalAlarmList.splice(i, 1);\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                localStorage.setItem(\"AlarmList\", JSON.stringify(LocalAlarmList));\r\n                setAlarm(LocalAlarmList);\r\n                setAlarmCount(LocalAlarmList.length);\r\n            }\r\n        };\r\n    });\r\n\r\n    const GetDayRemaining = (alarmMinute, alarmHour) => {\r\n        const today = new Date();\r\n        const minute = today.getMinutes();\r\n        const hour = today.getHours();\r\n\r\n        var Remaining = {\r\n            TimeRemaining: \"\",\r\n            Day: \"\",\r\n        }\r\n\r\n        if (alarmHour > hour) {\r\n            Remaining.TimeRemaining = ((alarmHour * 60) + alarmMinute) - ((hour * 60) + minute);\r\n            Remaining.Day = \"Today\";\r\n            return Remaining;\r\n        }\r\n        else if (alarmHour < hour) {\r\n            Remaining.TimeRemaining = (((alarmHour + 24) * 60) + alarmMinute) - ((hour * 60) + minute);\r\n            Remaining.Day = \"Tommorow\";\r\n            return Remaining;\r\n        }\r\n        else {\r\n            if (alarmMinute > minute) {\r\n                Remaining.TimeRemaining = alarmMinute - minute;\r\n                Remaining.Day = \"Today\";\r\n                return Remaining;\r\n            }\r\n            else {\r\n                Remaining.TimeRemaining = (24 * 60) - (minute - alarmMinute);\r\n                Remaining.Day = \"Tommorow\";\r\n                return Remaining;\r\n            }\r\n        }\r\n    }\r\n\r\n    const setAlarmDate = (alarmMinute, alarmHour) => {\r\n\r\n        var DayAndRemaining = GetDayRemaining(alarmMinute, alarmHour);\r\n        var DayDate = {\r\n            Day: DayAndRemaining.Day,\r\n            Remaining: DayAndRemaining.TimeRemaining,\r\n            Date: \"\"\r\n        };\r\n\r\n        if (DayDate.Day === \"Today\") {\r\n            DayDate.Date = { Day: selectedDate.getDate(), Month: selectedDate.getMonth() + 1, Year: selectedDate.getFullYear() };\r\n        }\r\n        else {\r\n            var Day = selectedDate.getDate() + 1;\r\n            var Month = selectedDate.getMonth() + 1;\r\n            var Year = selectedDate.getFullYear();\r\n            DayDate.Date = {\r\n                Day: (Day) % 30,\r\n                Month: (Month + Math.trunc(Day / 30)) % 13,\r\n                Year: Year + Math.trunc((Month + Math.trunc(Day / 30)) / 13)\r\n            };\r\n        }\r\n        return DayDate;\r\n    }\r\n\r\n    const AlarmListUpdate = () => {\r\n        var list = JSON.parse(localStorage.getItem(\"AlarmList\"));\r\n        if (list != null) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                list[i].Remaining = GetDayRemaining(list[i].Time.Minute, list[i].Time.Hour).TimeRemaining;\r\n            }\r\n            setAlarm(list);\r\n        }\r\n    }\r\n\r\n    const AlarmListInsert = () => {\r\n        var DayDate = setAlarmDate(selectedDate.getMinutes(), selectedDate.getHours());\r\n        var alarm = {\r\n            Time: { Hour: selectedDate.getHours(), Minute: selectedDate.getMinutes() },\r\n            Date: DayDate.Date,\r\n            Day: DayDate.Day,\r\n            Reminder: document.getElementById(\"reminder\").value,\r\n            Remaining: DayDate.Remaining,\r\n        };\r\n\r\n        AlarmListUpdate();\r\n\r\n        if (alarmList.length === 0) {\r\n            alarmList.unshift(alarm);\r\n        }\r\n        else if (alarmList.length === 1) {\r\n            if (alarmList[0].Remaining > alarm.Remaining) {\r\n                alarmList.unshift(alarm);\r\n            }\r\n            else {\r\n                alarmList.push(alarm);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < alarmList.length - 1; i++) {\r\n                if (alarmList[i].Remaining > alarm.Remaining) {\r\n                    alarmList.unshift(alarm);\r\n                }\r\n                else if (alarmList[i].Remaining < alarm.Remaining && alarmList[i + 1].Remaining > alarm.Remaining) {\r\n                    alarmList.splice(i + 1, 0, alarm);\r\n                }\r\n                else {\r\n                    alarmList.push(alarm);\r\n                }\r\n                console.log(i);\r\n            }\r\n        }\r\n\r\n        setAlarm(alarmList);\r\n    }\r\n\r\n    const click = () => {\r\n        AlarmListInsert();\r\n        localStorage.setItem(\"AlarmList\", JSON.stringify(alarmList));\r\n        setAlarmCount(alarmCount + 1);\r\n    }\r\n\r\n    const showLocalStorage = () => {\r\n        var list = JSON.parse(localStorage.getItem(\"AlarmList\"));\r\n        console.log(list);\r\n    }\r\n\r\n    const showLocalStorageClear = () => {\r\n        localStorage.removeItem(\"AlarmList\");\r\n    }\r\n\r\n\r\n    const ArarmListShow = () => {\r\n        if (alarmCount === 0) {\r\n            return (\r\n                <>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Time</th><th>Day</th><th>Occation</th><th></th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Time</th><th>Day</th><th>Occation</th><th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {alarmList.map((item) => (\r\n                                <tr>\r\n                                    <td> {`${item.Time.Hour} : ${item.Time.Minute}`} </td>\r\n                                    <td> {item.Day} </td>\r\n                                    <td> {item.Reminder} </td>\r\n                                    <td>D</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <nav>\r\n                    <div>\r\n                        <h2> Set Alarm </h2>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"timePicker\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <TimePicker value={selectedDate} onChange={handleDateChange} />\r\n                            </MuiPickersUtilsProvider>\r\n                        </div>\r\n                        <div className=\"reminderText\">\r\n                            <input type=\"textBox\" id=\"reminder\" placeholder=\"Reminder Text\" />\r\n                        </div>\r\n                        <div className=\"setButton\">\r\n                            <button onClick={click}> Set </button>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n\r\n                <div id=\"table\">\r\n                    <ArarmListShow />\r\n                </div>\r\n\r\n                <footer>\r\n                    <button onClick={showLocalStorage} >LOCAL STORAGE</button>\r\n                    <button onClick={showLocalStorageClear} >LOCAL STORAGE CLEAR</button>\r\n                </footer>\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Alarm;"]},"metadata":{},"sourceType":"module"}